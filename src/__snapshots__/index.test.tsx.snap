// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`withSpinner should ignore errors if handleError is false 1`] = `
<DisplayComponent
  data={
    Object {
      "error": true,
      "loading": false,
    }
  }
/>
`;

exports[`withSpinner should not render errorComponent if skipErrors returns true 1`] = `
<div>
  Validation error occured on field: 
  password
   with message: 
  Wrong password
</div>
`;

exports[`withSpinner should not render spinner if loading is false 1`] = `
<div>
  loading: 
  false
</div>
`;

exports[`withSpinner should render a emptyComponent if data i empty 1`] = `
<EmptyComponent
  data={
    Object {
      "loading": false,
      "value": Object {},
    }
  }
/>
`;

exports[`withSpinner should render passed errorComponent if error exists 1`] = `
<ErrorComponent
  data={
    Object {
      "error": true,
      "loading": false,
    }
  }
/>
`;

exports[`withSpinner should render passed spinnerComponent 1`] = `
<Loading
  data={
    Object {
      "loading": true,
    }
  }
/>
`;

exports[`withSpinner should render spinner if loading is true 1`] = `
<Loading
  data={
    Object {
      "loading": true,
    }
  }
/>
`;

exports[`withSpinner should render spinner in 100 ms and after render component 1`] = `
<class_1>
  <withSpinner(DisplayComponent)
    data={
      Object {
        "item": Object {
          "id": 1,
        },
        "loading": false,
      }
    }
  >
    <DisplayComponent
      data={
        Object {
          "item": Object {
            "id": 1,
          },
          "loading": false,
        }
      }
    >
      <div>
        loading: 
        false
        , item: 
        1
      </div>
    </DisplayComponent>
  </withSpinner(DisplayComponent)>
</class_1>
`;

exports[`withSpinner should support custom nested loading property 1`] = `
<class_3>
  <withSpinner(DisplayComponent)
    result={
      Object {
        "nested": Object {
          "item": Object {
            "id": 1,
          },
          "loading": false,
        },
      }
    }
  >
    <DisplayComponent
      result={
        Object {
          "nested": Object {
            "item": Object {
              "id": 1,
            },
            "loading": false,
          },
        }
      }
    >
      <div>
        loading: 
        false
        , item:
         
        1
      </div>
    </DisplayComponent>
  </withSpinner(DisplayComponent)>
</class_3>
`;
